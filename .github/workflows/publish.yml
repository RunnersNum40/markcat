name: publish-to-crates-io

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Verify tag matches Cargo.toml version
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME#v}"
          VER=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].version')
          test "$TAG" = "$VER" || { echo "Tag v$TAG does not match Cargo.toml $VER"; exit 1; }

      - name: Skip if version already on crates.io
        id: exists
        run: |
          set -euo pipefail
          NAME=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].name')
          VER=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].version')
          MAX=$(curl -sSf "https://crates.io/api/v1/crates/$NAME" | jq -r '.crate.max_version')
          if [ "$MAX" = "$VER" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "version $VER already on crates.io"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Package dry run
        if: steps.exists.outputs.skip == 'false'
        run: cargo publish --dry-run

      - name: Publish
        if: steps.exists.outputs.skip == 'false' && env.ACT != 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish
